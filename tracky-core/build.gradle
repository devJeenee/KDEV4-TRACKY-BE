plugins {
    id 'java-library'
}

def querydslDir = "$buildDir/generated/querydsl"    //Q파일 생성 경로
sourceSets {
    main.java.srcDirs += querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath       //Q 파일 생성용 configuration에 컴파일할 때 쓰는 클래스들도 같이 넣기
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.batch:spring-batch-core'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.5.1'
    implementation 'com.fasterxml.uuid:java-uuid-generator:5.1.0'

    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// query - dsl 중복 생성 방지
tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.querydsl
    options.generatedSourceOutputDirectory = file(querydslDir)
}

tasks.bootJar {
    enabled = false
}

//task compileQuerydsl(type: JavaCompile) {       //Q파일만 따로 생성
//    description = "Compile Querydsl Q-types"
//    source = sourceSets.main.java
//    classpath = configurations.querydsl
//    destinationDirectory = file(querydslDir)
//    options.annotationProcessorPath = configurations.querydsl
//}
